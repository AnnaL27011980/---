# Создание и обучение модели Gradient Boosting Classifier
model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
model.fit(X_train, y_train)

# Расчет метрик на тренировочной выборке
y_train_pred = model.predict(X_train)
train_metrics = {
    'Accuracy': accuracy_score(y_train, y_train_pred),
    'Precision': precision_score(y_train, y_train_pred),
    'Recall': recall_score(y_train, y_train_pred),
    'F1 Score': f1_score(y_train, y_train_pred)
}

# Вывод метрик для тренировочной выборки
print("Train Metrics:")
for metric, value in train_metrics.items():
    print(f'{metric}: {value:.2f}')

# Предсказание на тестовой выборке
y_pred = model.predict(X_test)

# Вывод предсказаний
print(y_pred)
