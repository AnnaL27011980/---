# Создание и обучение модели XGBClassifier
model = XGBClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
model.fit(X_train, y_train)

# Расчет метрик
accuracy = accuracy_score(y_train, y_train_pred)
precision = precision_score(y_train, y_train_pred)
recall = recall_score(y_train, y_train_pred)
f1_score = f1_score(y_train, y_train_pred)
print(f'Accuracy: {accuracy:.2f}')
print(f'Precision: {precision:.2f}')
print(f'Recall: {recall:.2f}')
print(f'F1_score: {f1_score:.2f}')

# Предсказание на тестовой выборке
y_pred = model.predict(X_test)

# Вывод предсказаний
print(y_pred)

plt.figure(figsize=(10, 6))
plt.hist(y_pred, bins=20, alpha=0.7, label='Test Predictions')
plt.title('Distribution of Test Predictions')
plt.xlabel('Predicted Class')
plt.ylabel('Frequency')
plt.legend()
plt.show()

y_pred_proba = model.predict_proba(X_test)
print(y_pred_proba[:1])
